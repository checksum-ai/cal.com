/* Checksum.ai autogenerated test with custom Cal.com fixtures */
import { test, defineChecksumTest, checksumAI, expect } from "../../fixtures";

test(
  defineChecksumTest("User page with special characters in username should not 404", "SPECIAL_CHAR_001"),
  async ({ page, users }) => {
    await checksumAI("Create a user with special characters in username", async () => {
      const user = await users.create({ username: "franz-janßen" });
    });

    await checksumAI("Navigate to the user page and verify it doesn't return 404", async () => {
      const user = await users.create({ username: "franz-janßen" });
      const response = await page.goto(`/${user.username}`);
      expect(response?.status()).not.toBe(404);
    });
  }
);

test(
  defineChecksumTest(
    "Event type page with special characters in username should not 404",
    "SPECIAL_CHAR_002"
  ),
  async ({ page, users }) => {
    await checksumAI("Create a user with special characters in username", async () => {
      const user = await users.create({ username: "franz-janßen" });
    });

    await checksumAI("Navigate to the event type page and verify it doesn't return 404", async () => {
      const user = await users.create({ username: "franz-janßen" });
      const response = await page.goto(`/${user.username}/30-min`);
      expect(response?.status()).not.toBe(404);
    });
  }
);

test(
  defineChecksumTest("Redirect with special characters in username should not throw 500", "SPECIAL_CHAR_003"),
  async ({ page, users }) => {
    await checksumAI("Create a user with special characters and single event type", async () => {
      const benny = await users.create({
        username: "ßenny", // ß is a special character
        eventTypes: [
          {
            title: "15 min",
            slug: "15-min",
            length: 15,
          },
        ],
        overrideDefaultEventTypes: true,
      });
    });

    await checksumAI("Navigate to user page and verify redirect works without 500 error", async () => {
      const benny = await users.create({
        username: "ßenny", // ß is a special character
        eventTypes: [
          {
            title: "15 min",
            slug: "15-min",
            length: 15,
          },
        ],
        overrideDefaultEventTypes: true,
      });
      // This redirects to /[user]/[type] because this user has only 1 event-type
      const response = await page.goto(`/${benny.username}`);
      expect(response?.status()).not.toBe(500);
    });
  }
);
