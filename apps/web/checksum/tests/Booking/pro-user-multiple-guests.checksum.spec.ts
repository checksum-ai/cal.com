/* Checksum.ai autogenerated test with custom Cal.com fixtures */
import { test, defineChecksumTest, checksumAI, expect } from "../../fixtures";

test(defineChecksumTest("Can book with multiple guests", "PRO_GUESTS_001"), async ({ page, users }) => {
  const additionalGuests = ["test@gmail.com", "test2@gmail.com"];
  let pro: any;

  await checksumAI("Create a pro user for testing multiple guests booking functionality", async () => {
    pro = await users.create();
  });

  await checksumAI("Navigate to the pro user's booking page", async () => {
    await page.goto(`/${pro.username}`);
  });

  await checksumAI("Click on the first event type to start booking", async () => {
    await page.click('[data-testid="event-type-link"]');
  });

  await checksumAI("Navigate to next month to find available time slots", async () => {
    await page.click('[data-testid="incrementMonth"]');
  });

  await checksumAI("Select the first available day in the calendar", async () => {
    await page.locator('[data-testid="day"][data-disabled="false"]').nth(0).click();
  });

  await checksumAI("Select the first available time slot", async () => {
    await page.locator('[data-testid="time"]').nth(0).click();
  });

  await checksumAI("Fill in the primary attendee name", async () => {
    await page.fill('[name="name"]', "test1234");
  });

  await checksumAI("Fill in the primary attendee email address", async () => {
    await page.fill('[name="email"]', "test1234@example.com");
  });

  await checksumAI("Click the add guests button to add additional attendees", async () => {
    await page.locator('[data-testid="add-guests"]').click();
  });

  await checksumAI("Fill in the first additional guest email address", async () => {
    await page.locator('input[type="email"]').nth(1).fill(additionalGuests[0]);
  });

  await checksumAI("Click the add another guest button to add a second guest", async () => {
    await page.locator('[data-testid="add-another-guest"]').click();
  });

  await checksumAI("Fill in the second additional guest email address", async () => {
    await page.locator('input[type="email"]').nth(2).fill(additionalGuests[1]);
  });

  await checksumAI("Confirm the booking by clicking the confirm button", async () => {
    await page.click('[data-testid="confirm-book-button"]');
  });

  await expect(
    page.locator("[data-testid=success-page]"),
    "The booking success page should be visible after confirming the booking with multiple guests"
  ).toBeVisible();

  await expect(
    page.locator(`[data-testid="attendee-email-${additionalGuests[0]}"]`),
    "The first additional guest email should be displayed on the success page"
  ).toHaveText(additionalGuests[0]);

  await expect(
    page.locator(`[data-testid="attendee-email-${additionalGuests[1]}"]`),
    "The second additional guest email should be displayed on the success page"
  ).toHaveText(additionalGuests[1]);
});
