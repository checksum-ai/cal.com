/* Checksum.ai autogenerated test with custom Cal.com fixtures */
import { v4 as uuidv4 } from "uuid";

import dayjs from "@calcom/dayjs";
import prisma from "@calcom/prisma";

import { test, defineChecksumTest, checksumAI, expect } from "../../fixtures";

test(
  defineChecksumTest("Profile redirection", "OOO_PROFILE_REDIRECT_001"),
  async ({ page, users, variableStore }) => {
    await checksumAI("Create users and set up out of office entry", async () => {
      variableStore.user = await users.create({ name: "userOne" });
      variableStore.userTo = await users.create({ name: "userTwo" });
      const uuid = uuidv4();
      await prisma.outOfOfficeEntry.create({
        data: {
          start: dayjs().startOf("day").toDate(),
          end: dayjs().startOf("day").add(1, "w").toDate(),
          uuid,
          user: { connect: { id: variableStore.user.id } },
          toUser: { connect: { id: variableStore.userTo.id } },
          createdAt: new Date(),
          reason: {
            connect: {
              id: 1,
            },
          },
        },
      });
    });

    await checksumAI("Navigate to the user's profile page", async () => {
      await page.goto(`/${variableStore.user.username}`);
    });

    await checksumAI("Click on the first event type link", async () => {
      const eventTypeLink = page.locator('[data-testid="event-type-link"]').first();
      await eventTypeLink.click();
    });

    await expect(
      page.getByTestId("away-emoji"),
      "The away emoji should be visible indicating the user is out of office"
    ).toBeTruthy();
  }
);
